---
# kernel -01 : Process 및 User 별 최대 파일 수 확인
- name: '< Check : kernel -01 > Get maximum number of files per process'
  shell: 'ulimit -a | egrep "open|max user"'
  register: get_openfiles

# kernel -02 : 자원에 대한 한계 설정 값 가져오기
- name: '< Check : kernel -02 > Get limit settings for all resources'
  shell: 'ulimit -Ha'
  register: get_resourcelimit

# kernel -03 : MSG Queue 설정 값 가져오기
- name: '< Check : kernel -03 > Get MSG Queue'
  shell: 'sysctl -a | grep kernel.msgm'
  register: get_msgq
  ignore_errors: true

# kernel -04 : sysctl net [ core, rmem, wmem, max_backlog, vm.swappiness ] 설정 가져오기
- name: '< Check : kernel -04 > Get sysctl Config Setting'
  shell: 'sysctl -a | egrep "somaxconn|tcp_rmem|tcp_wmem|max_backlog|vm.swappiness"'
  register: get_sysctl
  ignore_errors: true

# kernel -05 : MTU 사이즈 가져오기
- name: '< Check : kernel -05 > Get MTU Size Setting'
  shell: 'ifconfig -a|grep mtu'
  register: get_mtu

# kernel 수집 값의 출력을 위한 전역 변수 값 설정
- name: '< Check : kernel > Set Result'
  set_fact:
    rs_openfiles: '{{ get_openfiles.stdout_lines[0] }}'
    rs_userfiles: '{{ get_openfiles.stdout_lines[1] }}'
    rs_msgq: '{{ get_msgq.stdout if( get_msgq.rc == 0 ) else get_msgq.stderr }}'
    rs_conn: '{{ get_sysctl.stdout_lines[1] if( get_sysctl.rc == 0 ) else get_sysctl.stderr }}'
    rs_rmem: '{{ get_sysctl.stdout_lines[2] if( get_sysctl.rc == 0 ) else get_sysctl.stderr }}'
    rs_wmem: '{{ get_sysctl.stdout_lines[3] if( get_sysctl.rc == 0 ) else get_sysctl.stderr }}'
    rs_backlog: '{{ get_sysctl.stdout_lines[0] if( get_sysctl.rc == 0 ) else get_sysctl.stderr }}'
    rs_swap: '{{ get_sysctl.stdout_lines[4] if( get_sysctl.rc == 0 ) else get_sysctl.stderr }}'
    rs_mtu: '{{ get_mtu.stdout }}'
