---
- name: '< DATABASE MHA Setting - 01 > Setting Variable Heartbeat IP Address vm_heartbeat_ip_1'
  set_fact:
    vm_heartbeat_ip_1: '192.168.100.{{ vm_ipaddr_1.split(".")[3] }}'
  when: inventory_hostname == vm_ipaddr_3

- name: '< DATABASE MHA Setting - 01 > Setting Variable Heartbeat IP Address vm_heartbeat_ip_3'
  set_fact:
    vm_heartbeat_ip_2: '192.168.100.{{ vm_ipaddr_2.split(".")[3] }}'
  when: inventory_hostname == vm_ipaddr_3

- name: '< DATABASE MHA Setting - 01 > Setting Variable Heartbeat IP Address vm_heartbeat_ip_3'
  set_fact:
    vm_heartbeat_ip_3: '192.168.100.{{ vm_ipaddr_3.split(".")[3] }}'
  when: inventory_hostname == vm_ipaddr_3

- name: '< DATABASE MHA Setting - 01 > Setting Heartbeat IP Address Instance MHA'
  shell: 'nmcli con add con-name ens256 ifname ens256 type ethernet ip4 {{ vm_heartbeat_ip_3 }}/24 ipv4.method manual autoconnect yes'
  register: heartbeat_result1
  when: inventory_hostname == vm_ipaddr_3

- name: '< DATABASE MHA Setting - 01 > Result Check'
  debug:
    msg: '{{ heartbeat_result1 }}'
  when: inventory_hostname == vm_ipaddr_3

- name: '< DATABASE MHA Setting - 01 > Setting MHA Config Server IP'
  lineinfile:
    path: '/engn001/mha/conf/mha.cnf'
    regexp: '{{ item.origin }}'
    line: '{{ item.change }}'
  loop:
    - { 'origin':'hostname=1.1.1.1','change':'hostname={{ vm_heartbeat_ip_1 }}' }
    - { 'origin':'hostname=1.1.1.2','change':'hostname={{ vm_heartbeat_ip_2 }}' }
  register: result_01
  when: inventory_hostname == vm_ipaddr_3

- name: "< DATABASE MHA Setting - 01 > Result Check"
  debug:
    msg: "{{ result_01 }}"
  when: inventory_hostname == vm_ipaddr_3

- name: '< DATABASE MHA Setting - 02 > Setting MHA Environment Config'
  lineinfile:
    path: '/engn001/mha/scripts/.env.ini'
    regexp: '{{ item.origin }}'
    line: '{{ item.change }}'
  loop:
    - { "origin":"declare -x ORIG_MASTERDB='1.1.1.1'","change":"declare -x ORIG_MASTERDB='{{ vm_heartbeat_ip_1 }}'" }
    - { "origin":"declare -x ORIG_SLAVEDB='1.1.1.2'","change":"declare -x ORIG_SLAVEDB='{{ vm_heartbeat_ip_2 }}'" }
    - { "origin":"declare -x DB1_SERVICE_IP='1.1.1.1'","change":"declare -x DB1_SERVICE_IP='{{ vm_heartbeat_ip_1 }}'" }
    - { "origin":"declare -x DB2_SERVICE_IP='1.1.1.2'","change":"declare -x DB2_SERVICE_IP='{{ vm_heartbeat_ip_2 }}'" }
    - { "origin":"declare -x DB1_REPL_IP='1.1.1.1'","change":"declare -x DB1_REPL_IP='{{ vm_heartbeat_ip_1 }}'" }
    - { "origin":"declare -x DB2_REPL_IP='1.1.1.2'","change":"declare -x DB2_REPL_IP='{{ vm_heartbeat_ip_2 }}'" }
    - { "origin":"declare -x VIP='1.1.1.3/24'","change":"declare -x VIP='{{ vm_vip }}/24'" }
  register: result_02
  when: inventory_hostname == vm_ipaddr_3

- name: "< DATABASE MHA Setting - 02 > Result Check"
  debug:
    msg: "{{ result_02 }}"
  when: inventory_hostname == vm_ipaddr_3

- name: "< DATABASE MHA Setting - 03 > Setting Variable VIP Ip address"
  set_fact:
    vip_split: '{{ vm_vip.split(".") }}'
  when: inventory_hostname == vm_ipaddr_3
    
- name: '< DATABASE MHA Setting - 04 > Setting MHA Script failover'
  shell: '{{ item }}'
  loop: 
    - 'sed -i "s/1.1.1.3/{{ vm_vip }}/g" /engn001/mha/scripts/master_ip_failover'
    - 'sed -i "s/1.1.1.4/{{ vip_split[0] }}.{{ vip_split[1] }}.{{ vip_split[2] }}.1/g" /engn001/mha/scripts/master_ip_failover'
  register: result_04
  when: inventory_hostname == vm_ipaddr_3

- name: "< DATABASE MHA Setting - 04 > Result Check"
  debug:
    msg: "{{ result_04 }}"
  when: inventory_hostname == vm_ipaddr_3

- name: '< DATABASE MHA Setting - 05 > Setting MHA Script master_ip_online_change'
  shell: '{{ item }}'
  loop: 
    - 'sed -i "s/1.1.1.3/{{ vm_vip }}/g" /engn001/mha/scripts/master_ip_online_change'
    - 'sed -i "s/1.1.1.4/{{ vip_split[0] }}.{{ vip_split[1] }}.{{ vip_split[2] }}.1/g" /engn001/mha/scripts/master_ip_online_change'
  register: result_05
  when: inventory_hostname == vm_ipaddr_3

- name: "< DATABASE MHA Setting - 05 > Result Check"
  debug:
    msg: "{{ result_05 }}"
  when: inventory_hostname == vm_ipaddr_3
